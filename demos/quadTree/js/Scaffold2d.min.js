/*!

ScaffoldJS 1.0.35

The MIT License (MIT)

Copyright (c) 2014 Bradford Kelly
brad@bradfordkelly.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
 */
;
var RenderModes={WEBGL:0,CANVAS:1};var ScaleModes={WEBGL:0,CANVAS:1};function Scaffold(){}self.Scaffold=Scaffold;Scaffold.camera=null;Scaffold.gravity=0;Scaffold.keysDown=[];Scaffold.state=null;Scaffold.lastTime=0;
Scaffold.currentFPS=0;Scaffold.timers=[];Scaffold.data={};Scaffold.paused=false;Scaffold.gamepads=[];Scaffold.renderMode=RenderModes.WEBGL;Scaffold.scale=1;Scaffold.scaleMode=ScaleModes.CANVAS;Scaffold.timeScale=1;
Scaffold.maxTimeScale=2.5;Scaffold.soundAvailable=false;Scaffold.canvasFallback=true;Scaffold.gamepadLookup={up:12,down:13,left:14,right:15,select:8,start:9,a:0,b:2,c:1,d:3,l1:4,l2:6,r1:5,r2:7,l3:10,r3:11};
Scaffold.prototype={};Scaffold.init=function(canvas){if(Scaffold.scaleMode==ScaleModes.CANVAS&&Scaffold.scale!=1){canvas.style.width=canvas.width+"px";canvas.style.height=canvas.height+"px";canvas.width=Math.round(canvas.width/2);
canvas.height=Math.round(canvas.height/2);Scaffold.scale=1}if(Scaffold.renderMode==0){Scaffold.renderer=new RendererGL(canvas);if(!Scaffold.renderer.gl&&Scaffold.canvasFallback){Scaffold.renderMode=1}}if(Scaffold.renderMode==1){Scaffold.renderer=new RendererCanvas(canvas)
}if(Sound.init()){Scaffold.soundAvailable=true}Scaffold.camera=new Camera(canvas.width,canvas.height);if(navigator.userAgent.indexOf("Firefox")!=-1){window.addEventListener("MozGamepadConnected",Scaffold.gamepadConnected,false);
window.addEventListener("MozGamepadDisconnected",Scaffold.gamepadDisconnected,false)}else{if(navigator.userAgent.indexOf("Chrome")!=-1&&navigator.userAgent.indexOf("Mobile")==-1){Scaffold.gamepads=navigator.webkitGetGamepads()
}}if(!self.requestAnimationFrame){if(self.msRequestAnimationFrame){self.requestAnimationFrame=self.msRequestAnimationFrame}else{if(self.mozRequestAnimationFrame){self.requestAnimationFrame=self.mozRequestAnimationFrame
}else{if(self.webkitRequestAnimationFrame){self.requestAnimationFrame=self.webkitRequestAnimationFrame}else{if(self.oRequestAnimationFrame){self.requestAnimationFrame=self.oRequestAnimationFrame}else{self.requestAnimationFrame=function(callback){setInterval(callback,16)
}}}}}}};Scaffold.setState=function(state){if(state!=null){state=null}Scaffold.state=state};Scaffold.run=function(){var d=Date.now();var elapsedTime=d-Scaffold.lastTime;if(Scaffold.lastTime==0){elapsedTime=16.67
}Scaffold.timeScale=elapsedTime/16.67;if(Scaffold.timeScale>Scaffold.maxTimeScale){Scaffold.timeScale=Scaffold.maxTimeScale}else{if(Scaffold.timeScale<1){Scaffold.timeScale=1}}Scaffold.lastTime=d;Scaffold.currentFPS=(1000/elapsedTime+0.5)|0;
if(!Scaffold.paused){var i=Scaffold.timers.length;while(i--){Scaffold.timers[i].update(elapsedTime)}if(Scaffold.state!=null){Scaffold.state.update(elapsedTime);if(Scaffold.renderMode==1){Scaffold.renderer.context.clearRect(0,0,Scaffold.camera.bounds.width,Scaffold.camera.bounds.height)
}else{Scaffold.renderer.startRender()}Scaffold.state.render()}}requestAnimationFrame(Scaffold.run)};Scaffold.playSound=function(src){this.loader.assets[src].play()};Scaffold.keyDown=function(e){Scaffold.keysDown[e.keyCode]=1;
if(e.keyCode==189){if(Sound.volume>0){Sound.setVolume(Sound.volume-0.1)}}else{if(e.keyCode==187){if(Sound.volume<1){Sound.setVolume(Sound.volume+0.1)}}}if(e.keyCode==80){Scaffold.paused=!Scaffold.paused
}};Scaffold.keyUp=function(e){delete Scaffold.keysDown[e.keyCode]};Scaffold.gamepadConnected=function(e){Scaffold.gamepads.push(e.gamepad)};Scaffold.gamepadDisconnected=function(e){};Scaffold.collideSprites=function(a,b){};
Scaffold.gamepadDown=function(key){};Scaffold.getOverlap=function(boundsA,boundsB){var xBottomRight=Math.min(boundsB.x+boundsB.width,boundsA.x+boundsA.width);var xTopLeft=Math.max(boundsB.x,boundsA.x);
var xOverlap=Math.max(0,xBottomRight-xTopLeft);var yBottomRight=Math.min(boundsB.y+boundsB.height,boundsA.y+boundsA.height);var yTopLeft=Math.max(boundsB.y,boundsA.y);var yOverlap=Math.max(0,(yBottomRight-yTopLeft));
return{total:xOverlap*yOverlap,y:yOverlap,x:xOverlap}};Scaffold.resolveX=function(spA,spB){var diffA=spA.x-spA.prevPos.x;var diffB=spB.x-spB.prevPos.x;var diffTotal=Math.abs(diffA)+Math.abs(diffB);var overlap=0;
var tolerance=diffTotal+Scaffold.timeScale*2;var diffA=spA.x-spA.prevPos.x;var diffB=spB.x-spB.prevPos.x;var diffTotal=Math.abs(diffA)+Math.abs(diffB);var overlap=0;var tolerance=diffTotal+Scaffold.timeScale*1;
if(diffA>diffB){overlap=spA.x+spA.spriteWidth-spB.x;if(overlap>tolerance){return}}else{if(diffA<diffB){overlap=spA.x-spB.spriteWidth-spB.x;if(-overlap>tolerance){return}}else{return}}if(diffA>diffB){overlap=spA.x+spA.spriteWidth-spB.x;
if(overlap>tolerance){return}}else{if(diffA<diffB){overlap=spA.x-spB.spriteWidth-spB.x;if(-overlap>tolerance){return}}else{return}}if(!spA.moveable||spA.locked.left){spB.x+=overlap;spB.velocity.x*=-spB.bounce
}else{if(!spB.moveable||spB.locked.right){spA.x-=overlap;spA.velocity.x*=-spA.bounce}else{spA.prevPos.x=spA.x;spB.prevPos.x=spB.x;spA.x-=overlap*0.5;spB.x+=overlap*0.5;var vA=spB.velocity.x;var vB=spA.velocity.x;
var average=(vA+vB)/2;spA.velocity.x=average;spB.velocity.x=average}}};Scaffold.resolveY=function(spA,spB){var diffA=spA.y-spA.prevPos.y;var diffB=spB.y-spB.prevPos.y;var diffTotal=Math.abs(diffA)+Math.abs(diffB);
var overlap=0;var tolerance=diffTotal+Scaffold.timeScale*2;if(diffA>diffB){overlap=spA.y+spA.spriteHeight-spB.y;if(overlap>tolerance){return}}else{if(diffA<diffB){overlap=spA.y-spB.y-spB.spriteHeight;if(-overlap>tolerance){return
}}else{return}}if(!spA.moveable||spA.locked.top){spB.y+=overlap;spB.y=spA.y+spA.spriteHeight;spB.velocity.y*=-spB.bounce}else{if(!spB.moveable||spB.locked.bottom){spA.y-=overlap;spA.velocity.y*=-spA.bounce
}else{spA.y-=overlap*0.5;spB.y+=overlap*0.5;var vA=spB.velocity.y*((spB.velocity.y>0)?1:-1);var vB=spA.velocity.y*((spA.velocity.y>0)?1:-1);var average=(vA+vB)/2;spA.velocity.y=average*((spA.velocity.y>0)?1:-1);
spB.velocity.y=average*((spA.velocity.y>0)?1:-1)}}};Scaffold.collide=function(spA,spB){var overlap=Scaffold.getOverlap(spA.getBounds(),spB.getBounds());spA.colliding=false;spB.colliding=false;if(overlap.total>0){if(spA.solidCollide&&spB.solidCollide){Scaffold.resolveY(spA,spB);
if(spA.prevPos.y!=spA.y||spB.prevPos.y!=spB.prevPos.y){Scaffold.resolveX(spA,spB)}}var e={top:0,bottom:0,left:0,right:0,type:spB.type,obj:spB};spA.colliding=true;spB.colliding=true;if(spA.onCollide!=null){e=Scaffold.setDirection(spB,spA,e);
spA.onCollide(e)}if(spB.onCollide!=null){e={top:0,bottom:0,left:0,right:0,type:spA.type,obj:spA};e=Scaffold.setDirection(spA,spB,e);spB.onCollide(e)}}};Scaffold.min=function(){var i=arguments.length;while(i--){if(arguments[0]>arguments[i]){arguments[0]=arguments[i]
}}return arguments[0]};Scaffold.max=function(){var i=arguments.length;while(i--){if(arguments[0]<arguments[i]){arguments[0]=arguments[i]}}return arguments[0]};Scaffold.setDirection=function(a,b,event){if(a.prevPos.x+a.spriteWidth<=b.prevPos.x){event.left=1
}else{if(a.prevPos.x>=b.prevPos.x+b.spriteWidth){event.right=1}}if(a.prevPos.y+a.spriteHeight<=b.prevPos.y){event.top=1}else{if(a.prevPos.y>=b.prevPos.y+b.spriteHeight){event.bottom=1}}return event};Scaffold.collideGroup=function(sp,grp){var objects=grp.quadTree.retrieve(sp);
var i=objects.length;while(i--){var obj=objects[i];Scaffold.collide(sp,obj)}};Scaffold.collideGroups=function(grpA,grpB){var i=grpA.members.length;while(i--){Scaffold.collideGroup(grpA.members[i],grpB)
}};window.addEventListener("keydown",Scaffold.keyDown,false);window.addEventListener("keyup",Scaffold.keyUp,false);function Sprite(x,y,spriteSheet,sw,sh,fps,options){if(!options){options={enableFlipping:true}
}this.x=x||0;this.y=y||0;this.prevPos={x:x,y:y};this.direction={x:0,y:0};this.images=spriteSheet||null;this.colliding=false;this.solidCollide=false;this.moveable=true;this.locked={left:0,right:0,top:0,bottom:0};
this.frameRate=fps||30;this.fpsTime=0;this.animations=[];this.currentFrame=0;this.currentAnimation={frames:[0],repeat:0};this.spriteWidth=sw||0;this.spriteHeight=sh||0;this.bounds={left:this.x,width:this.spriteWidth,height:this.spriteHeight,right:this.x+this.spriteWidth,top:this.y,bottom:this.y+this.spriteHeight};
this.velocity={x:0,y:0};this.maxVelocity={x:6,y:8};this.drag={x:0.1,y:0};this.gravity=Scaffold.gravity;this.bounce=0;this.type="Sprite";this.direction={x:-1,y:0};this.platform=null;this.trim={left:0,top:0,right:0,bottom:0};
this.flashing=false;this.pseudoPhysics=1;this.framePositions=[];if(this.images){var cx=0;var cy=0;if(Scaffold.renderMode==1){while(cy<this.images.height){while(cx<this.images.width){this.framePositions.push({x:cx,y:cy});
cx+=this.spriteWidth}cx=0;cy+=this.spriteHeight}}else{var pixelHeight=1/this.images.height;var pixelWidth=1/this.images.width;while(cy<this.images.height){while(cx<this.images.width){this.framePositions.push({tx1:cx*pixelWidth,ty1:cy*pixelHeight,tx2:(cx+sw)*pixelWidth,ty2:(cy+sh)*pixelHeight});
cx+=this.spriteWidth}cx=0;cy+=this.spriteHeight}this.texture=Scaffold.renderer.textures[this.images.src]}}if(Scaffold.renderMode==1&&options.enableFlipping!=false){this.enableFlipping()}}Sprite.prototype={enableFlipping:function(){var buffer=document.createElement("canvas");
buffer.width=this.images.width;buffer.height=this.images.height;this.flippedContextBuffer=buffer.getContext("2d");this.flippedContextBuffer.save();this.flippedContextBuffer.scale(-1,1);this.flippedContextBuffer.drawImage(this.images,-this.images.width,0);
this.flippedContextBuffer.restore()},flash:function(time){this.flashing=true;var that=this;var timer=new Timer(time,false,function(){that.flashing=false})},addAnimation:function(name,frames,repeat){var r=repeat||1;
this.animations[name]={frames:frames,repeat:r}},playAnimation:function(name){if(this.currentAnimation!=this.animations[name]){this.currentFrame=0;this.currentAnimation=this.animations[name]}},stopAnimation:function(){this.currentAnimation={frames:[],repeat:1}
},update:function(elapsedTime){var tp=Scaffold.timeScale;if(this.currentAnimation.frames.length>1){this.fpsTime+=elapsedTime;if(this.fpsTime>=1000/this.frameRate){this.fpsTime=0;if(this.currentFrame+1>this.currentAnimation.frames.length-1){if(this.currentAnimation.repeat){this.currentFrame=0
}else{if(this.animationComplete){this.animationComplete()}}}else{this.currentFrame+=1}}}this.prevPos.x=this.x;this.prevPos.y=this.y;this.prevVelocity=this.velocity;if(this.pseudoPhysics){var g=this.gravity*Scaffold.timeScale;
var dx=this.drag.x*Scaffold.timeScale;var dy=this.drag.y*Scaffold.timeScale;var mvx=this.maxVelocity.x*Scaffold.timeScale;var mvy=this.maxVelocity.y*Scaffold.timeScale;var dvy=this.velocity.y*Scaffold.timeScale-this.velocity.y;
var dvx=this.velocity.x*Scaffold.timeScale-this.velocity.x;if(this.velocity.y>0){this.velocity.y+=g-dy;if(this.velocity.y<0){this.velocity.y=0}}else{if(this.velocity.y<0){this.velocity.y+=g+dy;if(this.velocity.y>0){this.velocity.y=0
}}else{this.velocity.y+=g}}if(this.velocity.y>mvy){this.velocity.y=mvy}else{if(this.velocity.y<-mvy){this.velocity.y=-mvy}}this.y+=this.velocity.y+dvy;if(this.velocity.x>0){this.velocity.x-=dx;if(this.velocity.x<0){this.velocity.x=0
}}else{if(this.velocity.x<0){this.velocity.x+=dx;if(this.velocity.x>0){this.velocity.x=0}}}if(this.velocity.x>mvx){this.velocity.x=mvx}else{if(this.velocity.x<-mvx){this.velocity.x=-mvx}}this.x+=this.velocity.x+dvx
}if(this.platform!=null){if(this.platform.stickyY){this.y=this.platform.y-this.spriteHeight;this.velocity.y=this.platform.velocity.y}if(this.platform.stickyX){this.x+=this.platform.x-this.platform.prevPos.x
}if(this.x>=this.platform.x+this.platform.spriteWidth||this.x+this.spriteWidth<=this.platform.x||this.velocity.y<0){this.platform=null}}},getBounds:function(){this.bounds.left=this.x;this.bounds.right=this.x+this.spriteWidth;
this.bounds.top=this.y;this.bounds.bottom=this.y+this.spriteHeight;this.bounds.x=this.x;this.bounds.y=this.y;return this.bounds},render:function(){var t=this;if(t.flashing==false||this.currentFrame%2==0){Scaffold.renderer.renderSprite(this)
}},onCollide:function(e){if(e.type=="map"&&e.velocity.y>1&&(e.top||e.bottom)){this.velocity.y=-e.velocity.y*this.bounce}if(e.type=="map"&&(e.right||e.left)){this.velocity.x=-e.velocity.x*this.bounce}if(e.type=="Platform"&&e.bottom){this.platform=e.obj
}}};self.Sprite=Sprite;function Button(name,x,y,width,height,image){this.image=image;this.x=x;this.y=y;this.width=width;this.height=height;this.over=0;this.onMouseUp=null;this.clickTime=0;this.listeners=[];
this.id=name}Button.prototype={update:function(t){if(this.inRect(Scaffold.state.mouseX,Scaffold.state.mouseY)){this.over=1;if(Scaffold.state.lastMouseUp.timestamp!=this.clickTime&&this.inRect(Scaffold.state.lastMouseUp.x,Scaffold.state.lastMouseUp.y)){this.clickTime=Scaffold.state.lastMouseUp.timestamp;
for(var i=0;i<this.listeners.length;i++){this.listeners[i].onButtonClick({target:this.id})}}}else{this.over=0}},render:function(){Scaffold.context.drawImage(this.image,this.width*this.over,0,this.width,this.height,this.x,this.y,this.width,this.height)
},inRect:function(x,y){if((x>this.x&&x<this.x+this.width)&&(y>this.y&&y<this.y+this.height)){return true}else{return false}},addListener:function(obj){if(obj.onButtonClick!=null){this.listeners.push(obj)
}},destroy:function(){this.listeners=null}};window.Button=Button;function AnimatedButton(name,x,y,width,height,image,animationFramesNormal,animationFramesOver,fps){this.id="name";Sprite.call(this,x,y,image,width,height,fps);
this.gravity=0;this.over=0;this.addAnimation("normal",animationFramesNormal);this.addAnimation("over",animationFramesOver);this.playAnimation("normal");this.animationKey=0;this._super_update=Sprite.prototype.update;
this.listeners=[]}AnimatedButton.prototype=new Sprite();AnimatedButton.prototype.update=function(t){if(this.inRect(Scaffold.state.mouseX,Scaffold.state.mouseY)){this.over=1;if(Scaffold.state.lastMouseUp.timestamp!=this.clickTime&&this.inRect(Scaffold.state.lastMouseUp.x,Scaffold.state.lastMouseUp.y)){this.clickTime=Scaffold.state.lastMouseUp.timestamp;
for(var i=0;i<this.listeners.length;i++){this.listeners[i].onButtonClick({target:this.id})}}if(this.animationKey!=1){this.animationKey=1;this.playAnimation("over")}}else{this.over=0;if(this.animationKey!=0){this.playAnimation("normal");
this.animationKey=0}}this._super_update.call(this,t)};AnimatedButton.prototype.addListener=function(obj){if(obj.onButtonClick!=null){this.listeners.push(obj)}};AnimatedButton.prototype.inRect=function(x,y){if((x>this.x&&x<this.x+this.spriteWidth)&&(y>this.y&&y<this.y+this.spriteHeight)){return true
}else{return false}};AnimatedButton.prototype.destroy=function(){this.listeners=null};AnimatedButton.prototype.render=function(){var t=this;Scaffold.context.drawImage(t.images,t.spriteWidth*t.currentAnimation[t.currentFrame],0,t.spriteWidth,t.spriteHeight,t.x,t.y,t.spriteWidth,t.spriteHeight)
};self.AnimatedButton=AnimatedButton;function Camera(w,h){this.bounds={x:0,y:0,width:w/Scaffold.scale,height:h/Scaffold.scale};this.following=null;this.maxX=null;this.maxY=null;this.followOffset={x:0.5,y:0.5};
this.shaking=true;this.endShakeTime=0;this.shakeIntensity=4;this.shakeTime=0;this.currShakeTime=0;this.prevBounds={x:0,y:0}}Camera.prototype={follow:function(sprite){this.following=sprite},shake:function(duration,intensity){this.shakeTime=duration;
if(intensity!=null){this.shakeIntensity}this.shaking=true},update:function(t){if(this.following!=null){var newX=this.following.x-this.bounds.width*this.followOffset.x;if(this.following.x>=this.bounds.x+this.bounds.width*this.followOffset.x){if(this.maxX==null||newX<this.maxX){this.bounds.x=newX+0.5|0;
this.prevBounds.x=this.bounds.x}}else{if(this.bounds.x>0){this.bounds.x=newX+0.5|0;this.prevBounds.x=this.bounds.x}else{this.bounds.x=0;this.prevBounds.x=this.bounds.x}}var newY=this.following.y-this.bounds.height*this.followOffset.y;
if(this.following.y>=this.bounds.y+this.bounds.height*this.followOffset.y){if(this.maxY==null||newY<this.maxY){this.bounds.y=newY+0.5|0;this.prevBounds.y=this.bounds.y}}else{if(this.bounds.y>0){this.bounds.y=newY;
this.prevBounds.y=this.bounds.y}else{this.bounds.y=0;this.prevBounds.y=this.bounds.y}}}if(this.shaking&&this.currShakeTime>=this.shakeTime){this.shaking=false;this.currShakeTime=0}if(this.shaking){this.currShakeTime+=t;
var he=this.shakeIntensity/2;this.bounds.x=this.prevBounds.x;this.bounds.y=this.prevBounds.y;this.bounds.x+=Math.round(Math.random()*this.shakeIntensity-he);this.bounds.y+=Math.round(Math.random()*this.shakeIntensity-he);
if(this.bounds.x>this.maxX){this.bounds.x=this.maxX-1}else{if(this.bounds.x<0){this.bounds.x=0}}if(this.bounds.y>this.maxY){this.bounds.y=this.maxY-1}else{if(this.bounds.y<0){this.bounds.y=0}}}},lockToMap:function(tileMap){this.maxX=tileMap.width-this.bounds.width+0.5|0;
this.maxY=tileMap.height-this.bounds.height+0.5|0}};self.Camera=Camera;function Group(){this.members=[];this.quadTree=new QuadTree(0,Scaffold.camera.bounds);this.removeList=[];this.debugQuadTree=false;
this.maxQuadObject=10;this.maxQuadLevels=10}Group.prototype={add:function(obj){this.members.push(obj)},remove:function(obj){this.removeList[this.removeList.length]=obj},render:function(context,camera){Scaffold.renderer.renderGroup(this);
if(this.debugQuadTree){this.quadTree.drawNodes()}},update:function(t){var j=this.removeList.length;while(j--){this.members.splice(this.members.indexOf(this.removeList[j]),1)}this.removeList=[];this.quadTree=new QuadTree(0,Scaffold.camera.bounds,this.maxQuadLevels,this.maxQuadObjects);
var i=this.members.length;while(i--){this.members[i].update(t);this.quadTree.insertSprite(this.members[i])}},collideInternal:function(t){var spArr=null;for(var i=0;i<this.members.length;i++){spArr=this.quadTree.retrieve(this.members[i]);
for(var j=0;j<spArr.length;j++){if(this.members[i]!=spArr[j]&&spArr[j].colliding==false){Scaffold.collide(this.members[i],spArr[j])}}}}};self.Group=Group;function ItemMap(){this.map=null;this.group=new Group();
this.spriteClassName=null;this.callback=null}self.ItemMap=ItemMap;ItemMap.prototype={initWithCallback:function(json,layer,listener){if(json.layers[layer].type!="objectgroup"){throw"ItemMap: json layer "+layer+" is not an objectgroup"
}this.map=json.layers[layer].objects;this.callback=listener;if(!json.gidCache){json.gidCache={};var i=json.tilesets.length;var total=0;var gid=0;while(i--){gid=json.tilesets[i].firstgid;total=gid+(json.tilesets[i].imagewidth/json.tilesets[i].tilewidth)*(json.tilesets[i].imageheight/json.tilesets[i].tileheight);
while(gid<total){json.gidCache[gid]=json.tilesets[i];json.gidCache[gid].height=json.tilesets[i].tileheight;json.gidCache[gid].width=json.tilesets[i].tilewidth;gid++}}}var i=this.map.length;while(i--){this.map[i].bounds={x:this.map[i].x,y:this.map[i].y-json.gidCache[this.map[i].gid].height,width:json.gidCache[this.map[i].gid].width,height:json.gidCache[this.map[i].gid].height}
}},initWithSprite:function(json,layer,spriteClassName){this.map=json.layers[layer].objects;this.spriteClassName=spriteClassName;if(json.layers[layer].type!="objectgroup"){throw"ItemMap: json layer "+layer+" is not an objectgroup"
}var gid=this.map[0].gid;var i=json.tilesets.length;var tileCount=0;var spWidth=0;var spHeight=0;while(i--){tileCount=(json.tilesets[i].imagewidth/json.tilesets[i].tilewidth)*(json.tilesets[i].imageheight/json.tilesets[i].tileheight);
if(gid>=json.tilesets[i].firstgid&&gid<json.tilesets[i].firstgid+tileCount){spWidth=json.tilesets[i].tilewidth;spHeight=json.tilesets[i].tileheight;break}}i=this.map.length;while(i--){this.map[i].bounds={x:this.map[i].x,y:this.map[i].y-spHeight,width:spWidth,height:spHeight}
}},update:function(t){var i=this.map.length;var overlap=0;while(i--){overlap=Scaffold.getOverlap(Scaffold.camera.bounds,this.map[i].bounds);if(overlap.total>0){if(!this.callback){this.group.add(new window[this.spriteClassName](this.map[i].bounds.x,this.map[i].bounds.y))
}else{this.callback(this.map[i])}this.map.splice(i,1)}}this.group.update(t)},render:function(){this.group.render()}};function Loader(assetList,onComplete){this.assets=[];this.assetList=assetList;this.assetList.that=this;
this.count=0;this.onComplete=onComplete;var imageFormats=["jpg","jpeg","png"];var textFormats=["txt","csv"];var that=this;for(var i=0;i<assetList.length;i++){var asset=assetList[i];var ext=asset.substr(asset.indexOf(".")+1).toLowerCase();
if(imageFormats.indexOf(ext)>=0){this.assets[asset]=new Image();this.assets[asset].that=this;this.assets[asset].key=asset;this.assets[asset].onload=function(e){console.log("Image Loaded: "+this.src);if(Scaffold.renderMode==0){Scaffold.renderer.addTexture(this)
}this.that.itemLoaded()};this.assets[asset].onloadprogress=function(e){console.log(e)};this.assets[asset].src=asset}else{if(ext=="mp3"){this.assets[asset]=new Sound(asset,function(){that.itemLoaded()})
}else{this.assets[asset]="";var type="text";if(ext=="json"){type="json"}(function(index,context){$.ajax({type:"GET",url:asset,dataType:type,success:function(data){context.count++;context.assets[index]=data;
if(context.count==context.assetList.length){context.onComplete()}}})})(asset,this)}}}}Loader.prototype={itemLoaded:function(e){this.count++;if(this.assetList.length==this.count){this.onComplete()}if(e!=undefined&&e.type=="fileload"){this.assets[e.src]=e.src;
createjs.Sound.setVolume(0.5)}}};self.Loader=Loader;function ParticleEmitter(x,y,objClass,interval,lifespan,useQuadTree){this.members=[];this.currTime=0;this.lastTime=0;this.interval=interval;this.particleClass=objClass;
this.x=x;this.y=y;this.elapsedTime=0;this.lifespan=lifespan;this.tree;this.timer;if(useQuadTree==false){this.useTree=false}else{this.useTree=true}}ParticleEmitter.prototype={update:function(t){this.elapsedTime+=t;
this.lastTime+=t;if(this.interval>0&&this.lastTime>=this.interval){var i=this.lastTime/this.interval>>0;for(var i=0;i<this.lastTime/this.interval>>0;i++){this.addParticle();if(i>75){break}}this.lastTime=0
}if(this.useTree){this.tree=new QuadTree(0,Scaffold.camera.bounds)}var i=this.members.length;while(i--){if(this.members[i].expires<=this.elapsedTime){this.members.splice(i,1)}else{if(this.useTree){this.tree.insertSprite(this.members[i])
}this.members[i].update(t)}}},render:function(){Scaffold.renderer.renderGroup(this)},addParticle:function(){var p=new this.particleClass(this.x,this.y);p.expires=this.elapsedTime+this.lifespan;this.members.push(p)
},emit:function(count){var i=count;while(i--){this.addParticle()}},emitWithTimer:function(interval,lifespan,time){this.interval=interval;this.lifespan=lifespan;var that=this;this.timer=new Timer(time,false,function(){that.interval=0
})},collide:function(sp){var objects=this.tree.retrieve(sp);var i=objects.length;while(i--){var obj=objects[i];obj.collideBounds(sp.getBounds())}}};self.ParticleEmitter=ParticleEmitter;function Platform(x,y,spriteSheet,width,height,options){Sprite.call(this,x,Number(y),spriteSheet,width,height,12);
this.solidCollisions=true;this.maxVelocity.x=4;this.type="Platform";this.moveable=false;this.direction={x:0,y:0};this.drag={x:0,y:0};this.gravity=0;this.minX=(options.minX)?Number(options.minX):null;this.maxX=(options.maxX)?Number(options.maxX):null;
this.maxY=(options.maxY)?Number(options.maxY):null;this.minY=(options.minY)?Number(options.minY):null;this.stickyY=true;this.stickyX=true;this.speed=(options.speed)?Number(options.speed):0;this.pseudoPhysics=(options.pseudoPhysics=="false")?false:true;
console.log(this);if(this.minX&&this.x<=this.minX){this.direction.x=1}else{if(this.maxX&&this.x<=this.maxX){this.direction.x=-1}}if(this.minY&&this.y<=this.minY){this.direction.y=1}else{if(this.minY&&this.y>=this.maxY){this.direction.y=-1
}}}self.Platform=Platform;Platform.prototype=new Sprite();Platform.prototype.update=function(t){Sprite.prototype.update.call(this,t);if(this.maxY&&this.minY){if(this.pseudoPhysics){this.velocity.y+=this.speed*this.direction.y
}else{this.prevPos.y=this.y;this.y+=this.speed*this.direction.y}if(this.y<this.minY&&this.direction.y==-1){this.direction.y=1;this.y=this.minY;this.velocity.y=0}else{if(this.y>=this.maxY&&this.direction.y==1){this.direction.y=-1;
this.y=this.maxY;this.velocity.y=0}}}if(this.maxX&&this.minX){if(this.pseudoPhysics){this.velocity.x+=this.speed*this.direction.x}else{this.x+=this.speed*this.direction.x}if(this.direction.x==1&&this.x>=this.maxX){this.direction.x=-1;
this.x=this.maxX;this.velocity.x=0}else{if(this.direction.x==-1&&this.x<=this.minX){this.direction.x=1;this.x=this.minX;this.velocity.x=0}}}};Platform.prototype.onCollide=function(e){if(e.obj.locked.top&&e.top||e.obj.locked.bottom&&e.bottom){this.velocity={x:0,y:0};
this.y=this.prevPos.y;e.obj.y=e.obj.prevPos.y;this.direction.y*=-1}};function PlatformMap(img){ItemMap.call(this);this.spriteClassName="Platform";this.image=img}self.PlatformMap=PlatformMap;PlatformMap.prototype=ItemMap.prototype;
PlatformMap.prototype.init=function(json,layer,image){var that=this;PlatformMap.prototype.initWithCallback.call(this,json,layer,function(e){})};PlatformMap.prototype.addAll=function(){var i=this.map.length;
while(i--){this.group.add(new window[this.spriteClassName](this.map[i].bounds.x,this.map[i].bounds.y,this.image,this.map[i].bounds.width,this.map[i].bounds.height,this.map[i].properties))}};function ProgressBar(x,y,width,height,borderRGBA,fillRGBA,backgroundRGBA){this.border=borderRGBA;
this.background=backgroundRGBA;this.fill=fillRGBA;this.x=x;this.y=y;this.width=width;this.height=height;this.percent=0.5}ProgressBar.prototype={update:function(t){},render:function(){if(Scaffold.renderMode==1){Scaffold.context.fillStyle="rbga("+this.background[0]+","+this.background[1]+","+this.background[2]+","+this.background[3]+")";
Scaffold.context.fillRect(this.x,this.y,this.width,this.height);Scaffold.context.fillStyle="rbga("+this.fill[0]+","+this.fill[1]+","+this.fill[2]+","+this.fill[3]+")";Scaffold.context.fillRect(this.x,this.y,this.width*this.percent,this.height)
}else{if(this.background){Scaffold.renderer.drawFill(this.x,this.y,this.width,this.height,this.background)}Scaffold.renderer.drawFill(this.x,this.y,this.width*this.percent,this.height,this.fill);Scaffold.renderer.drawRect(this.x,this.y,this.width,this.height,this.border,1)
}}};self.ProgressBar=ProgressBar;function QuadTree(level,bounds,maxLevels,maxObj,dbg){this.level=level;this.bounds=bounds;this.sprites=[];this.nodes=[];this.maxObjects=maxObj||10;this.maxLevels=maxLevels||10;
this.debug=false||dbg}QuadTree.prototype={clearNodes:function(){this.sprites=[];for(var i=0;i<nodes.length;i++){this.nodes[i].clear()}},splitNodes:function(){var rect={x:this.bounds.x,y:this.bounds.y,width:this.bounds.width/2,height:this.bounds.height/2};
this.nodes[0]=new QuadTree(this.level+1,{x:rect.x,y:rect.y,width:rect.width,height:rect.height},this.maxLevels,this.maxObjects,this.debug);rect.x=this.bounds.x+rect.width;this.nodes[1]=new QuadTree(this.level+1,{x:rect.x,y:rect.y,width:rect.width,height:rect.height},this.maxLevels,this.maxObjects,this.debug);
rect.x=this.bounds.x;rect.y=this.bounds.y+rect.height;this.nodes[2]=new QuadTree(this.level+1,{x:rect.x,y:rect.y,width:rect.width,height:rect.height},this.maxLevels,this.maxObjects,this.debug);rect.x=this.bounds.x+rect.width;
this.nodes[3]=new QuadTree(this.level+1,{x:rect.x,y:rect.y,width:rect.width,height:rect.height},this.maxLevels,this.maxObjects,this.debug)},drawNodes:function(context){if(Scaffold.renderMode==1){var context=Scaffold.renderer.context;
context.beginPath();context.lineWidth="2";context.strokeStyle="yellow";context.rect(this.bounds.x-Scaffold.camera.bounds.x,this.bounds.y-Scaffold.camera.bounds.y,this.bounds.width,this.bounds.height);context.stroke();
if(this.nodes[0]==null){return}for(var i=0;i<4;i++){this.nodes[i].debug=true;context.beginPath();context.lineWidth="2";context.strokeStyle="red";context.rect(this.nodes[i].bounds.x-Scaffold.camera.bounds.x,this.nodes[i].bounds.y-Scaffold.camera.bounds.y,this.nodes[i].bounds.width,this.nodes[i].bounds.height);
context.stroke();this.nodes[i].drawNodes(context)}}else{for(var i=0;i<this.nodes.length;i++){this.nodes[i].debug=true;Scaffold.renderer.drawRect(this.nodes[i].bounds.x-Scaffold.camera.bounds.x,this.nodes[i].bounds.y-Scaffold.camera.bounds.y,this.nodes[i].bounds.width,this.nodes[i].bounds.height,[255,240,1,1],1);
this.nodes[i].drawNodes()}}},getIndex:function(sp){var my=this.bounds.y+this.bounds.height/2;var mx=this.bounds.x+this.bounds.width/2;var top=(sp.y<my&&sp.y+sp.spriteHeight<my);var bottom=(sp.y>my);if(sp.x<mx&&sp.x+sp.spriteWidth<mx){if(top){return[0]
}else{if(bottom){return[2]}}}else{if(sp.x>mx){if(top){return[1]}else{if(bottom){return[3]}}}}if(sp.x<=mx&&sp.x+sp.spriteWidth>mx){if(sp.y>mx){return[2,3]}else{if(sp.y<mx){return[0,1]}else{return[0,1,2,3]
}}}if(sp.y<=my&&sp.y+sp.spriteHeight>=my){if(sp.x>mx){return[1,3]}else{if(sp.x<mx){return[0,1]}else{return[1,2,3]}}}return[-1]},insertSprite:function(sp){var c=Scaffold.camera;if(sp.x>c.bounds.x+c.bounds.width||sp.x+sp.spriteWidth<c.bounds.x||sp.y>c.bounds.y+c.bounds.height||sp.y+sp.spriteHeight<c.bounds.y){return
}if(this.nodes[0]!=null){var indexes=this.getIndex(sp);for(var i=0;i<indexes.length;i++){if(indexes[i]!=-1){this.nodes[indexes[i]].insertSprite(sp);return}}}this.sprites.push(sp);if(this.sprites.length>this.maxObjects&&this.level<this.maxLevels){if(this.nodes[0]==null){this.splitNodes()
}var i=0;while(i<this.sprites.length){var indexes=this.getIndex(this.sprites[i]);for(var j=0;j<indexes.length;j++){if(indexes[j]!=-1){var spr;if(j==indexes.length-1){spr=this.sprites.splice(i,1)[0]}else{spr=this.sprites[i]
}this.nodes[indexes[j]].insertSprite(spr)}else{i++}}}}},retrieve:function(sp){var index=this.getIndex(sp);var ret=[];for(var i=0;i<index.length;i++){if(index[i]!=-1&&this.nodes[0]!=null){ret=this.nodes[index[i]].retrieve(sp).concat(ret)
}}if(ret.length>0){return ret}return this.sprites}};self.QuadTree=QuadTree;function RendererGL(canvas){this.textures=[];this.gl=canvas.getContext("experimental-webgl");console.log(this.gl);if(!this.gl){return false
}this.gl.viewportWidth=canvas.width;this.gl.viewportHeight=canvas.height;var shaderSrc=[];shaderSrc[0]="attribute vec4 aPosition;";shaderSrc[1]="varying vec2 vTexCoord;";shaderSrc[2]="uniform vec2 uResolution; uniform bool useImageTexture; uniform vec2 uTranslation;";
shaderSrc[3]="void main(void) {";shaderSrc[4]="    vTexCoord = aPosition.zw;vec2 zeroToOne = aPosition.xy / uResolution; vec2 zeroToTwo = zeroToOne * 2.0;vec2 clipSpace = zeroToTwo - 1.0;gl_Position.zw = vec2(1.0, 1.0);gl_Position.xy = vec2(clipSpace * vec2(1, -1) + uTranslation*vec2(2,2));";
shaderSrc[5]="}";var shaderSrcStr=shaderSrc.join("\n");var vertexShader=this.gl.createShader(this.gl.VERTEX_SHADER);this.gl.shaderSource(vertexShader,shaderSrcStr);this.gl.compileShader(vertexShader);var cStatus=this.gl.getShaderParameter(vertexShader,this.gl.COMPILE_STATUS);
if(!cStatus){alert("Failed to compile vertex shader")}shaderSrc=[];shaderSrc[0]="precision mediump float;";shaderSrc[1]="varying vec2 vTexCoord;";shaderSrc[2]="uniform sampler2D sTexture; uniform bool useImageTexture; uniform vec4 uColor;";
shaderSrc[3]="void main(void) {";shaderSrc[4]="    if (useImageTexture) {vec4 texColor;texColor = texture2D(sTexture, vTexCoord);gl_FragColor = texColor; }";shaderSrc[5]=" else { gl_FragColor = uColor; }";
shaderSrc[6]="}";shaderSrcStr=shaderSrc.join("\n");var fragmentShader=this.gl.createShader(this.gl.FRAGMENT_SHADER);this.gl.shaderSource(fragmentShader,shaderSrcStr);this.gl.compileShader(fragmentShader);
cStatus=this.gl.getShaderParameter(vertexShader,this.gl.COMPILE_STATUS);if(!cStatus){alert("Failed to compile fragment shader")}this.program=this.gl.createProgram();this.gl.attachShader(this.program,vertexShader);
this.gl.attachShader(this.program,fragmentShader);this.gl.linkProgram(this.program);this.gl.useProgram(this.program);this.program.positionAttribute=this.gl.getAttribLocation(this.program,"aPosition");this.program.samplerUniform=this.gl.getUniformLocation(this.program,"sTexture");
this.program.useImageTextureUniform=this.gl.getUniformLocation(this.program,"useImageTexture");this.program.colorUniform=this.gl.getUniformLocation(this.program,"uColor");this.program.translateUniform=this.gl.getUniformLocation(this.program,"uTranslation");
this.gl.enableVertexAttribArray(this.program.positionAttribute);this.gl.uniform2f(this.gl.getUniformLocation(this.program,"uResolution"),canvas.width/Scaffold.scale,canvas.height/Scaffold.scale);this.gl.uniform1i(this.program.useImageTextureUniform,true);
this.gl.uniform2f(this.program.translateUniform,0,0);this.gl.viewport(0,0,this.gl.viewportWidth,this.gl.viewportHeight);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);this.gl.enable(this.gl.BLEND);
this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA);this.buffer=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer)}RendererGL.prototype={startRender:function(){this.gl.viewport(0,0,this.gl.viewportWidth,this.gl.viewportHeight);
this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)},draw:function(pos,tex,translation){if(!translation){translation={x:0,y:0}}this.gl.uniform2f(this.program.translateUniform,translation.x,translation.y);
this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,tex);this.gl.uniform1i(this.program.useImageTextureUniform,true);this.gl.uniform1i(this.program.samplerUniform,0);this.buffer.itemSize=4;
this.buffer.numItems=pos.length/this.buffer.itemSize;this.gl.bufferData(this.gl.ARRAY_BUFFER,pos,this.gl.STREAM_DRAW);this.gl.vertexAttribPointer(this.program.positionAttribute,this.buffer.itemSize,this.gl.FLOAT,false,0,0);
this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.buffer.numItems)},drawLine:function(pos,color,lineWidth,fill){var c=color||[1,1,1,1];var w=lineWidth||1;var f=fill||false;this.gl.uniform4f(this.program.colorUniform,c[0],c[1],c[2],c[3]);
this.gl.uniform1i(this.program.useImageTextureUniform,false);this.buffer.itemSize=2;this.buffer.numItems=pos.length/this.buffer.itemSize;this.gl.lineWidth(w);this.gl.bufferData(this.gl.ARRAY_BUFFER,pos,this.gl.STREAM_DRAW);
this.gl.vertexAttribPointer(this.program.positionAttribute,this.buffer.itemSize,this.gl.FLOAT,false,0,0);if(!fill){this.gl.drawArrays(this.gl.LINE_STRIP,0,this.buffer.numItems)}else{this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.buffer.numItems)
}},drawCircle:function(x,y,radius,numPoints,color,lineWidth){var pos=[];var w=lineWidth||1;for(r=0;r<6.28;r+=0.2){pos[pos.length]=x+radius*Math.cos(r);pos[pos.length]=y+radius*Math.sin(r)}pos[pos.length]=pos[0];
pos[pos.length]=pos[1];this.drawLine(new Float32Array(pos),color,w)},drawRect:function(x,y,width,height,color,lineWidth){var pos=[];pos[pos.length]=x;pos[pos.length]=y;pos[pos.length]=x+width;pos[pos.length]=y;
pos[pos.length]=x+width;pos[pos.length]=y+height;pos[pos.length]=x;pos[pos.length]=y+height;pos[pos.length]=x;pos[pos.length]=y;this.drawLine(new Float32Array(pos),color,lineWidth)},drawFill:function(x,y,width,height,color){var pos=[];
pos[pos.length]=x;pos[pos.length]=y;pos[pos.length]=x+width;pos[pos.length]=y;pos[pos.length]=x;pos[pos.length]=y+height;pos[pos.length]=x+width;pos[pos.length]=y+height;this.drawLine(new Float32Array(pos),color,1,true)
},addTexture:function(img){if(this.textures[img.src]!=null){return this.textures[img.src]}else{var t=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,t);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE);
this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST);
this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,img);this.textures[img.src]=t;t.index=img.src;console.log("Texture Created.");return t}},renderSprite:function(sp){this.draw(this.getRenderPositions(sp),this.textures[sp.images.src])
},renderGroup:function(grp){var i=grp.members.length;if(!i){return}var obj=new Object();var lastVertex;var index;var indexList=[];while(i--){if(grp.members[i].flashing&&grp.members[i].currentFrame%2==1){continue
}index=grp.members[i].texture.index;if(!obj[index]){obj[index]=[];indexList[indexList.length]=index}var spos=this.getRenderPositions(grp.members[i]);if(obj[index].length>0){obj[index][obj[index].length]=obj[index][obj[index].length-4];
obj[index][obj[index].length]=obj[index][obj[index].length-4];obj[index][obj[index].length]=0;obj[index][obj[index].length]=0;obj[index][obj[index].length]=spos[0];obj[index][obj[index].length]=spos[1];
obj[index][obj[index].length]=0;obj[index][obj[index].length]=0}obj[index][obj[index].length]=spos[0];obj[index][obj[index].length]=spos[1];obj[index][obj[index].length]=spos[2];obj[index][obj[index].length]=spos[3];
obj[index][obj[index].length]=spos[4];obj[index][obj[index].length]=spos[5];obj[index][obj[index].length]=spos[6];obj[index][obj[index].length]=spos[7];obj[index][obj[index].length]=spos[8];obj[index][obj[index].length]=spos[9];
obj[index][obj[index].length]=spos[10];obj[index][obj[index].length]=spos[11];obj[index][obj[index].length]=spos[12];obj[index][obj[index].length]=spos[13];obj[index][obj[index].length]=spos[14];obj[index][obj[index].length]=spos[15]
}var j=indexList.length;while(j--){this.draw(new Float32Array(obj[indexList[j]]),this.textures[indexList[j]])}return},getRenderPositions:function(sp){var x1=sp.x-Scaffold.camera.bounds.x;var y1=sp.y-Scaffold.camera.bounds.y;
var x2=x1+sp.spriteWidth;var y2=y1+sp.spriteHeight;if(sp.direction.x<0){tx1=sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].tx2;tx2=sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].tx1
}else{tx1=sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].tx1;tx2=sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].tx2}return new Float32Array([x1,y1,tx1,sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].ty1,x2,y1,tx2,sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].ty1,x1,y2,tx1,sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].ty2,x2,y2,tx2,sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].ty2])
},drawImage:function(img,xyArr){var pos=[];var x,y=0;var i=xyArr.length;while(i--){x=xyArr[i].x;y=xyArr[i].y;pos[pos.length]=x;pos[pos.length]=y;pos[pos.length]=0;pos[pos.length]=0;pos[pos.length]=x+img.width;
pos[pos.length]=y;pos[pos.length]=1;pos[pos.length]=0;pos[pos.length]=x;pos[pos.length]=y+img.height;pos[pos.length]=0;pos[pos.length]=1;pos[pos.length]=x+img.width;pos[pos.length]=y+img.height;pos[pos.length]=1;
pos[pos.length]=1;if(i>0){pos[pos.length]=x+img.width;pos[pos.length]=y+img.height;pos[pos.length]=0;pos[pos.length]=0;pos[pos.length]=xyArr[i-1].x;pos[pos.length]=xyArr[i-1].y;pos[pos.length]=0;pos[pos.length]=0
}}this.draw(new Float32Array(pos),this.textures[img.src])}},self.RendererGL=RendererGL;function RendererCanvas(canvas){this.context=canvas.getContext("2d");this.context.scale(Scaffold.scale,Scaffold.scale)
}self.RendererCanvas=RendererCanvas;RendererCanvas.prototype={renderSprite:function(sp){if(sp.direction.x==-1&&sp.flippedContextBuffer!=null){this.context.drawImage(sp.flippedContextBuffer.canvas,sp.flippedContextBuffer.canvas.width-sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].x-sp.spriteWidth,sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].y,sp.spriteWidth,sp.spriteHeight,sp.x-Scaffold.camera.bounds.x,sp.y-Scaffold.camera.bounds.y,sp.spriteWidth,sp.spriteHeight)
}else{this.context.drawImage(sp.images,sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].x,sp.framePositions[sp.currentAnimation.frames[sp.currentFrame]].y,sp.spriteWidth,sp.spriteHeight,sp.x-Scaffold.camera.bounds.x,sp.y-Scaffold.camera.bounds.y,sp.spriteWidth,sp.spriteHeight)
}},renderGroup:function(grp){var i=grp.members.length;while(i--){this.renderSprite(grp.members[i])}},drawImage:function(assetStr,posArr){var i=posArr.length;var x,y=0;while(i--){x=posArr[i].x;y=posArr[i].y
}}};function State(){this.canvasRect=null;this.mouseX=0;this.mouseY=0;this.lastMouseUp={x:0,y:0,timestamp:0}}State.prototype={update:function(t){},render:function(){},listenToMouse:function(){this.canvasRect=Scaffold.context.canvas.getBoundingClientRect();
Scaffold.context.canvas.onmousemove=(function(self){return function(e){self.mouseX=e.clientX-self.canvasRect.left;self.mouseY=e.clientY-self.canvasRect.top}})(this);Scaffold.context.canvas.onmouseup=(function(self){return function(e){self.lastMouseUp={x:self.mouseX,y:self.mouseY,timestamp:new Date().getTime()}
}})(this)}};self.State=State;function TileMap(tWidth,tHeight,images,data){this.tileWidth=tWidth;this.tileHeight=tHeight;this.tileImages=images;this.mapArray=[];this.debug=false;this.listeners=[];this.debugRects=[];
this.debugHitRects=[];this.width=0;this.height=0;this.tileAddedListeners=[];if(data!=null){this.setMapData(data)}this.collideIndex=3;this.emptyTile=null;this.parallax=1;this.framePositions=[];var cx=0;
var cy=0;this.lastRenderData;this.prevTiles={firstCol:0,lastCol:0,firstRow:0,lastRow:0};this.lastStartPoint;this.currRenderIndexes=[];this.lastPosition;this.renderData=[];this.numRenderRows;this.numRenderCols;
this.translation={x:0,y:0};this.renderOffset={x:0,y:0};this.emptyRow=[];this.drawTranslated=false;if(Scaffold.renderMode==1){while(cy<this.tileImages.height){while(cx<this.tileImages.width){this.framePositions.push({x:cx,y:cy});
cx+=this.tileWidth}cx=0;cy+=this.tileHeight}}else{var pixelWidth=1/images.width;var pixelHeight=1/images.height;while(cy<this.tileImages.height){while(cx<this.tileImages.width){this.framePositions.push({tx1:cx*pixelWidth,ty1:cy*pixelHeight,tx2:(cx+this.tileWidth)*pixelWidth,ty2:(cy+this.tileHeight)*pixelHeight});
cx+=this.tileWidth}cx=0;cy+=this.tileHeight}console.log(this.framePositions);this.texture=Scaffold.renderer.textures[images.src]}TileMap.test=true}TileMap.instances=[];TileMap.prototype={loadMap:function(file){TileMap.instances[file]=this;
$.ajax({type:"GET",url:file,dataType:"text",success:this.mapLoaded})},setMapData:function(data){this.mapArray=data.split("\n");for(var i=0;i<this.mapArray.length;i++){this.mapArray[i]=this.mapArray[i].split(",")
}this.width=this.mapArray[0].length*this.tileWidth;this.height=this.mapArray.length*this.tileHeight-this.tileHeight;this.numRenderCols},setDataFromJSON:function(dat){this.mapArray=[];var row=0;this.mapArray[0]=[];
for(var i=0;i<dat.length;i++){this.mapArray[row].push(dat[i]-1);if(this.mapArray[row].length==this.numCols&&i!=dat.length-1){row++;this.mapArray[row]=[]}}this.width=this.mapArray[0].length*this.tileWidth;
this.height=this.mapArray.length*this.tileHeight;this.numRenderRows=Math.ceil(Scaffold.camera.bounds.height/this.tileHeight)+1;this.numRenderCols=Math.ceil(Scaffold.camera.bounds.width/this.tileWidth)+1;
this.emptyRow=new Array(24*(this.numRenderCols));console.log("rows: "+this.numRenderRows+" cols: "+this.numRenderCols)},mapLoaded:function(data){var that=TileMap.instances[this.url];that.mapArray=data.split("\n");
for(var i=0;i<that.mapArray.length;i++){that.mapArray[i]=that.mapArray[i].split(",")}that.width=that.mapArray[0].length*that.tileWidth;that.height=that.mapArray.length*that.tileHeight;for(var i=0;i<that.listeners.length;
i++){that.listeners[i]()}},onTileAdded:function(fnc){this.tileAddedListeners.push(fnc)},addRowData:function(rowIndex,dataRowIndex,dataColIndex,colDiff){var index=rowIndex*this.numRenderCols*24-8;if(index<0){index=0
}var tileNum,x1,y1,x2,y2,tx1,tx2,ty1,ty2;var positions=this.renderData;var lastPos={x:0,y:0};if(rowIndex>0){lastPos.x=positions[index-4];lastPos.y=positions[index-3]}dataColIndex+=colDiff;var colShift=colDiff*this.tileWidth;
for(var i=0;i<this.numRenderCols;i++){tileNum=this.mapArray[dataRowIndex][dataColIndex+i];if(tileNum>=0&&tileNum!=this.emptyTile&&tileNum<this.framePositions.length){x1=this.tileWidth*i+this.renderOffset.x+colShift;
y1=this.tileHeight*rowIndex+this.renderOffset.y;x2=x1+this.tileWidth;y2=y1+this.tileHeight;tx1=this.framePositions[tileNum].tx1;ty1=this.framePositions[tileNum].ty1;tx2=this.framePositions[tileNum].tx2;
ty2=this.framePositions[tileNum].ty2}else{x1=y1=x2=y2=tx1=tx2=ty1=ty2=0}if(rowIndex!=0&&i!=0||i>0||rowIndex>0){positions[index++]=lastPos.x;positions[index++]=lastPos.y;positions[index++]=0;positions[index++]=0;
positions[index++]=x1;positions[index++]=y1;positions[index++]=0;positions[index++]=0}positions[index++]=x1;positions[index++]=y1;positions[index++]=tx1;positions[index++]=ty1;positions[index++]=x2;positions[index++]=y1;
positions[index++]=tx2;positions[index++]=ty1;positions[index++]=x1;positions[index++]=y2;positions[index++]=tx1;positions[index++]=ty2;positions[index++]=x2;positions[index++]=y2;positions[index++]=tx2;
positions[index++]=ty2;lastPos.x=x2;lastPos.y=y2}this.renderData=positions},addColumnData:function(colIndex,dataRowIndex,dataColIndex){var index,tileNum,x1,y1,x2,y2,tx1,tx2,ty1,ty2;var lastPos={x:0,y:0};
var positions=this.renderData;index=24*colIndex-8;if(index<0){index=0}for(var i=0;i<this.numRenderRows;i++){if(this.mapArray[dataRowIndex+i]==undefined){}if(dataRowIndex+i<this.mapArray.length){tileNum=this.mapArray[dataRowIndex+i][dataColIndex]
}else{tileNum=0}if(dataColIndex==0&&i==0){index=0}if(tileNum>=0&&tileNum!=this.emptyTile&&tileNum<this.framePositions.length){x1=this.tileWidth*colIndex+this.renderOffset.x;y1=this.tileHeight*i+this.renderOffset.y;
x2=x1+this.tileWidth;y2=y1+this.tileHeight;tx1=this.framePositions[tileNum].tx1;ty1=this.framePositions[tileNum].ty1;tx2=this.framePositions[tileNum].tx2;ty2=this.framePositions[tileNum].ty2}else{x1=y1=x2=y2=tx1=tx2=ty1=ty2=0
}lastPos.x=positions[index-4];lastPos.y=positions[index-3];if(index-4>=0){positions.splice(index,0,lastPos.x,lastPos.y,0,0,x1,y1,0,0,x1,y1,tx1,ty1,x2,y1,tx2,ty1,x1,y2,tx1,ty2,x2,y2,tx2,ty2);if(index+25<positions.length){positions[index+24]=x2;
positions[index+25]=y2}}else{positions.splice(index,0,x1,y1,tx1,ty1,x2,y1,tx2,ty1,x1,y2,tx1,ty2,x2,y2,tx2,ty2,x2,y2,0,0,x2+this.tileWidth,y2,0,0)}if(index==0){index-=8}index+=24*this.numRenderCols}this.renderData=positions
},renderTranslated:function(){var rowAdded=false;var colAdded=false;if(this.mapArray.length==0){return}var firstRow=Scaffold.camera.bounds.y*this.parallax/this.tileHeight>>0;var lastRow=Math.ceil(firstRow+Scaffold.camera.bounds.height/this.tileHeight)+1;
if(lastRow>this.mapArray.length){lastRow=this.mapArray.length}var firstCol=Scaffold.camera.bounds.x*this.parallax/this.tileWidth>>0;var lastCol=Math.ceil(firstCol+Scaffold.camera.bounds.width/this.tileWidth)+1;
if(lastCol>this.mapArray[0].length){lastCol=this.mapArray[0].length}if(firstRow<0){firstRow=0}if(firstCol<0){firstCol=0}if(Scaffold.renderMode==1){for(var i=firstRow;i<lastRow;i++){for(var j=firstCol;j<lastCol;
j++){tileNum=this.mapArray[i][j];Scaffold.renderer.context.drawImage(this.tileImages,this.framePositions[tileNum].x,this.framePositions[tileNum].y,this.tileWidth,this.tileHeight,this.tileWidth*j-(Scaffold.camera.bounds.x*this.parallax),this.tileHeight*i-(Scaffold.camera.bounds.y*this.parallax),this.tileWidth,this.tileHeight)
}}}else{if(this.renderData.length==0){for(var i=0;i<this.numRenderRows;i++){this.addRowData(i,firstRow+i,firstCol,0)}}else{var rowDiff=this.prevTiles.firstRow-firstRow;var colDiff=this.prevTiles.firstCol-firstCol;
if(rowDiff>0){this.renderOffset.y-=this.tileHeight}else{if(rowDiff<0){this.renderOffset.y+=this.tileHeight}}if(colDiff>0){this.renderOffset.x-=this.tileWidth}else{if(colDiff<0){this.renderOffset.x+=this.tileWidth
}}if(rowDiff>0){var index=(this.numRenderRows-1)*this.numRenderCols*24-8;this.renderData.splice(index,24*this.numRenderCols);var empty=new Array(24*(this.numRenderCols));this.renderData=empty.concat(this.renderData);
this.addRowData(0,firstRow,firstCol,colDiff);rowAdded=true}else{if(rowDiff<0){this.renderData.splice(0,24*this.numRenderCols);this.addRowData(this.numRenderRows-1,lastRow-1,firstCol,colDiff);rowAdded=true
}}if(colDiff<0){var index=0;var diffX=0;for(var i=0;i<this.numRenderRows;i++){if(i==0){this.renderData.splice(index,24);index=i*this.numRenderCols*24-8}else{index+=this.numRenderCols*24-24;this.renderData.splice(index,24)
}}this.addColumnData(this.numRenderCols-1,firstRow,lastCol-1);colAdded=true}else{if(colDiff>0){var index=(this.numRenderCols-1)*24-8;for(var i=0;i<this.numRenderRows;i++){this.renderData.splice(index,24);
index+=this.numRenderCols*24-24}this.addColumnData(0,firstRow,firstCol);colAdded=true}}}var diffY=0;var diffX=0;diffX=this.tileWidth*(firstCol-Scaffold.camera.bounds.x*this.parallax/this.tileWidth);diffY=this.tileHeight*(firstRow-Scaffold.camera.bounds.y*this.parallax/this.tileHeight);
this.translation.x=-(this.renderOffset.x-diffX)/Scaffold.camera.bounds.width;this.translation.y=(this.renderOffset.y-diffY)/Scaffold.camera.bounds.height;Scaffold.renderer.draw(new Float32Array(this.renderData),this.texture,this.translation);
this.prevTiles.firstRow=firstRow;this.prevTiles.lastRow=lastRow;this.prevTiles.firstCol=firstCol;this.prevTiles.lastCol=lastCol}},render:function(){if(this.mapArray.length==0){return}if(this.drawTranslated){this.renderTranslated()
}var x,y,tileNum=0;var t=this;var firstRow=Scaffold.camera.bounds.y*this.parallax/this.tileHeight>>0;var lastRow=Math.ceil(firstRow+Scaffold.camera.bounds.height/this.tileHeight)+1;if(lastRow>t.mapArray.length){lastRow=t.mapArray.length
}var firstCol=Scaffold.camera.bounds.x*this.parallax/this.tileWidth>>0;var lastCol=Math.ceil(firstCol+Scaffold.camera.bounds.width/this.tileWidth)+1;if(lastCol>t.mapArray[0].length){lastCol=t.mapArray[0].length
}if(firstRow<0){firstRow=0}if(firstCol<0){firstCol=0}var positions=[];for(var i=firstRow;i<lastRow;i++){currRow=i;this.currRenderIndexes[currRow]=[];for(var j=firstCol;j<lastCol;j++){tileNum=t.mapArray[i][j];
for(var k=0;k<this.tileAddedListeners.length;k++){this.tileAddedListeners[k]({row:i,col:j})}if(!this.lastStartPoint){this.lastStartPoint={x:t.tileWidth*j-(Scaffold.camera.bounds.x*this.parallax),y:t.tileHeight*i-(Scaffold.camera.bounds.y*this.parallax)}
}if(tileNum>=0&&tileNum!=this.emptyTile&&tileNum<this.framePositions.length){if(Scaffold.renderMode==1){Scaffold.renderer.context.drawImage(t.tileImages,this.framePositions[tileNum].x,this.framePositions[tileNum].y,t.tileWidth,t.tileHeight,t.tileWidth*j-(Scaffold.camera.bounds.x*this.parallax),t.tileHeight*i-(Scaffold.camera.bounds.y*this.parallax),t.tileWidth,t.tileHeight)
}else{var x1=t.tileWidth*j-(Scaffold.camera.bounds.x*this.parallax);var y1=t.tileHeight*i-(Scaffold.camera.bounds.y*this.parallax);var x2=x1+this.tileWidth;var y2=y1+this.tileHeight;if(this.lastPosition){positions[positions.length]=this.lastPosition.x;
positions[positions.length]=this.lastPosition.y;positions[positions.length]=0;positions[positions.length]=0;positions[positions.length]=x1;positions[positions.length]=y1;positions[positions.length]=0;positions[positions.length]=0
}this.currRenderIndexes[currRow][this.currRenderIndexes[currRow].length]=positions.length;positions[positions.length]=x1;positions[positions.length]=y1;positions[positions.length]=this.framePositions[tileNum].tx1;
positions[positions.length]=this.framePositions[tileNum].ty1;positions[positions.length]=x2;positions[positions.length]=y1;positions[positions.length]=this.framePositions[tileNum].tx2;positions[positions.length]=this.framePositions[tileNum].ty1;
positions[positions.length]=x1;positions[positions.length]=y2;positions[positions.length]=this.framePositions[tileNum].tx1;positions[positions.length]=this.framePositions[tileNum].ty2;positions[positions.length]=x2;
positions[positions.length]=y2;positions[positions.length]=this.framePositions[tileNum].tx2;positions[positions.length]=this.framePositions[tileNum].ty2;this.lastPosition={x:x2,y:y2}}}}currRow++}if(Scaffold.renderMode==0){Scaffold.renderer.draw(new Float32Array(positions),this.texture,0);
this.lastRenderData=positions}},getOverlap:function(sp,tileBounds){var xBottomRight=Math.min(sp.x+sp.spriteWidth-sp.trim.right,tileBounds.x+this.tileWidth);var xTopLeft=Math.max(sp.x+sp.trim.left,tileBounds.x);
var xOverlap=Math.max(0,xBottomRight-xTopLeft);var yBottomRight=Math.min(sp.y+sp.spriteHeight-sp.trim.bottom,tileBounds.y+this.tileHeight);var yTopLeft=Math.max(sp.y+sp.trim.top,tileBounds.y);var yOverlap=Math.max(0,(yBottomRight-yTopLeft));
return overlap=xOverlap*yOverlap},collideGroup:function(grp){var i=grp.members.length;while(i--){this.collide(grp.members[i])}},collide:function(sp){if(this.mapArray.length==0){return null}if(sp.prevPos.x!=sp.x){sp.locked.right=0;
sp.locked.left=0}if(sp.prevPos.y!=sp.y){sp.locked.top=0;sp.locked.bottom=0}var t1=this.getTileAt(sp.x,sp.y);var t2=this.getTileAt(sp.x+sp.spriteWidth,sp.y);var t3=this.getTileAt(sp.x,sp.y+sp.spriteHeight);
if(t1==null||t2==null||t3==null){return}var startRow=t1.row;var startCol=t1.column;var details=[];var spMidX=sp.x+sp.spriteWidth/2;var spCenter={x:sp.x+sp.spriteWidth,y:sp.y+sp.spriteHeight};var increment=1;
if(sp.velocity.x<0){increment=-1;startCol=t2.column}for(var i=startRow;i<=t3.row;i++){var j=startCol;while((increment==1&&j<=t2.column)||(increment==-1&&j>=t1.column)){var currTile=this.mapArray[i][j];
var tileBounds={y:i*this.tileHeight,x:j*this.tileWidth,top:i*this.tileHeight,bottom:i*this.tileHeight+this.tileHeight,left:j*this.tileWidth,right:j*this.tileWidth+this.tileWidth};var event={top:0,bottom:0,left:0,right:0,tileId:currTile,type:"map",velocity:{x:sp.velocity.x,y:sp.velocity.y}};
if(currTile>=this.collideIndex){var oldY=sp.y;var oldX=sp.x;if(sp.prevPos.x!=null){sp.x=sp.prevPos.x}var overlap=this.getOverlap(sp,tileBounds);if(overlap>0){event=this.adjustY(tileBounds,sp,event)}sp.x=oldX;
overlap=this.getOverlap(sp,tileBounds);if(overlap>0){event=this.adjustX(tileBounds,sp,event)}var wasCollision=(event.left|event.right|event.top|event.bottom);if(this.debug){if(wasCollision){this.debugHitRects.push(tileBounds)
}else{this.debugRects.push(tileBounds)}}if(sp.onCollide!=undefined&&wasCollision){sp.onCollide(event)}}else{if(this.debug){this.debugRects.push(tileBounds)}}j+=increment}}},adjustY:function(tileBounds,sp,e){if(sp.prevPos.y+sp.spriteHeight-sp.trim.bottom<=tileBounds.y+this.tileWidth/2){sp.y=tileBounds.top-sp.spriteHeight+sp.trim.bottom;
sp.velocity.y=0;e.bottom=1;sp.locked.bottom=1}else{if(sp.prevPos.y+sp.trim.top>=tileBounds.y+this.tileHeight){sp.y=tileBounds.y+this.tileHeight-sp.trim.top;e.top=1;sp.velocity.y=0;sp.historyY=-1;sp.locked.top=1
}}return e},adjustX:function(tileBounds,sp,e){if(sp.prevPos.x+sp.trim.left>=tileBounds.x+(this.tileWidth/2)){sp.x=tileBounds.x+this.tileWidth-sp.trim.left;e.left=1;sp.velocity.x=0;sp.locked.left=1}else{if(sp.prevPos.x+sp.spriteWidth-sp.trim.right<=tileBounds.x+(this.tileWidth/2)){sp.x=tileBounds.x-sp.spriteWidth+sp.trim.right;
e.right=1;sp.velocity.x=0;sp.locked.right=1}}return e},renderDebug:function(){if(Scaffold.renderMode==1){for(var i=0;i<this.debugRects.length;i++){Scaffold.context.beginPath();Scaffold.context.lineWidth="1";
Scaffold.context.strokeStyle="red";Scaffold.context.rect(this.debugRects[i].x-Scaffold.camera.bounds.x,this.debugRects[i].y-Scaffold.camera.bounds.y,this.tileWidth,this.tileHeight);Scaffold.context.stroke()
}for(var i=0;i<this.debugHitRects.length;i++){Scaffold.context.beginPath();Scaffold.context.lineWidth="1";Scaffold.context.strokeStyle="yellow";Scaffold.context.rect(this.debugHitRects[i].x-Scaffold.camera.bounds.x,this.debugHitRects[i].y-Scaffold.camera.bounds.y,this.tileWidth,this.tileHeight);
Scaffold.context.stroke()}}else{for(var i=0;i<this.debugRects.length;i++){Scaffold.renderer.drawRect(this.debugRects[i].x-Scaffold.camera.bounds.x,this.debugRects[i].y-Scaffold.camera.bounds.y,this.tileWidth,this.tileHeight,[1,1,1,1],1)
}for(var i=0;i<this.debugHitRects.length;i++){Scaffold.renderer.drawRect(this.debugHitRects[i].x-Scaffold.camera.bounds.x,this.debugHitRects[i].y-Scaffold.camera.bounds.y,this.tileWidth,this.tileHeight,[255,0,0,1],4)
}}this.debugRects=[];this.debugHitRects=[];this.dRects=[]},getTileAt:function(x,y){if(this.mapArray.length==0){return null}var r=Math.floor(y/this.tileHeight);var col=Math.floor(x/this.tileWidth);var ret={};
ret.row=r;ret.column=col;if(r>=0&&r<this.mapArray.length&&col<this.mapArray[r].length){ret.tileId=this.mapArray[r][col]}else{ret=null}return ret},addListener:function(func){this.listeners.push(func)},destroy:function(){this.listeners=null;
this.tileAddedListeners=null}};TileMap.newFromJSON=function(json,images,layer){var map=new TileMap(json.tilewidth,json.tileheight,images,null);map.numCols=json.layers[layer].width;map.numRows=json.layers[layer].height;
console.log(json);map.setDataFromJSON(json.layers[layer].data);return map};self.TileMap=TileMap;function Timer(i,rpt,callback){this.interval=i;this.repeat=rpt;this.callback=callback;this.currTime=0;Scaffold.timers.push(this);
this.index=Scaffold.timers.length-1}Timer.prototype={update:function(t){this.currTime+=t;if(this.currTime>=this.interval){this.currTime=0;this.callback();if(!this.repeat){this.clear()}}},clear:function(){Scaffold.timers.splice(Scaffold.timers.indexOf(this),1)
}};self.Timer=Timer;function Sound(path,onComplete){this.source=null;this.buffer=null;this.onComplete=onComplete;var that=this;var req=new XMLHttpRequest();req.onload=function(){Sound.context.decodeAudioData(req.response,function(buffer){that.buffer=buffer;
that.onComplete(that)},function(){})};req.open("GET",path,true);req.responseType="arraybuffer";req.send()}Sound.prototype={play:function(){this.source=Sound.context.createBufferSource();this.source.buffer=this.buffer;
this.source.connect(Sound.gainNode);Sound.gainNode.connect(Sound.context.destination);this.source.start(0)},stop:function(){this.source.noteOff(0)},loop:function(){var source=Sound.context.createBufferSource();
source.buffer=this.buffer;source.connect(Sound.gainNode);Sound.gainNode.connect(Sound.context.destination);source.loop=true;source.start(0)}};self.Sound=Sound;Sound.context=null;Sound.gainNode=null;Sound.volume=1;
Sound.init=function(){try{self.AudioContext=window.AudioContext||window.webkitAudioContext;Sound.context=new AudioContext();Sound.gainNode=Sound.context.createGain();return true}catch(e){return false}};
Sound.setVolume=function(vol){if(vol>=0&&vol<=1){Sound.volume=vol;Sound.gainNode.gain.value=vol}};
